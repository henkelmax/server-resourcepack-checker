plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = archives_base_name
version = mod_version
group = maven_group

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = "https://maven.fabricmc.net/" }
    maven {
        name = 'henkelmax.public'
        url = 'https://maven.maxhenkel.de/repository/public'
    }
}

runClient.doFirst {
    args = ['--username', "henkelmax${new Random().nextInt(1000)}"]
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    implementation "de.maxhenkel.configbuilder:configbuilder:${configbuilder_version}"
    shadow "de.maxhenkel.configbuilder:configbuilder:${configbuilder_version}"

    implementation 'com.google.code.findbugs:jsr305:3.0.2'
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_dependency": project.minecraft_dependency,
                "loader_version": project.loader_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier 'shadow-dev'
    relocate 'de.maxhenkel.configbuilder', 'de.maxhenkel.resourcepackchecker.configbuilder'
}

prepareRemapJar {
    dependsOn shadowJar
}

remapJar {
    input = shadowJar.archiveFile.get()
}